{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/nanoid/index.browser.js","views/Department/Add Department/Add Department.js"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_arrayLikeToArray","arr","len","length","i","arr2","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","push","value","err","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","Add_Department","useHistory","useState","data","contacts","setContacts","department_name","status","addFormData","setAddFormData","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","onSubmit","newContact","newContacts","className","type","required","onChange","placeholder","autoComplete"],"mappings":"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","file":"static/js/12.27d8bbf9.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { urlAlphabet } from './url-alphabet/index.js'\nif (process.env.NODE_ENV !== 'production') {\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, size, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * size) / alphabet.length)\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import React, { useState } from 'react';\r\nimport \"src/asset/plugins/bootstrap/css/bootstrap.min.css\";\r\nimport \"src/asset/css/main.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport data from \"src/views/Department/mock-data.json\";\r\n//import ReadOnlyRow from \"src/views/Department/ReadOnlyRow\";\r\n//import EditableRow from \"src/views/Department/EditableRow\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Add_Department = () => {\r\n    const history = useHistory();\r\n  {/*const initialValues = {departmentname: \" \",  description: \"\"};\r\n  const [formValues, setformValues] = useState(initialValues);\r\n  const [formErrors, setformErrors] = useState({});\r\n  const [IsSubmit, setIsSubmit] = useState(false);\r\n  const handleChange = (e) =>{\r\n    const {name, value} = e.target;\r\n    setformValues({...formValues, [name]: value});\r\n  };\r\n  const handleSubmit = (e)=>{\r\n    console.log(handleSubmit);\r\n    console.log(setIsSubmit);\r\n    e.preventDefault();\r\n    (setformErrors(validate(formValues)))\r\n    \r\n    setIsSubmit(true);\r\n  }\r\n  useEffect(()=>{\r\n    console.log(IsSubmit);\r\n    if(Object.keys(formErrors).length === 0 && IsSubmit){\r\n      console.log(formErrors);\r\n    }   \r\n  }, [formErrors])\r\n\r\n  const validate=(values)=>{\r\n    const errors={}\r\n    if(values.departmentname ==0){\r\n      errors.departmentname = \"Department name is required\";\r\n    }\r\n    if(values.description == 0){\r\n      errors.description = \"description is required\";\r\n    }\r\n    \r\n    return errors;\r\n    \r\n  }*/}\r\n\r\n  //edit\r\n  const [contacts, setContacts] = useState(data);\r\n    const [addFormData, setAddFormData] = useState({\r\n        department_name: \"\",\r\n        status: \"\",\r\n    });\r\n    const [editFormData, setEditFormData] = useState({\r\n        department_name: \"\",\r\n        status: \"\",\r\n\r\n    });\r\n\r\n    const [editContactId, setEditContactId] = useState(null);\r\n    const handleAddFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...addFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n        setAddFormData(newFormData);\r\n    };\r\n\r\n    const handleEditFormChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const fieldName = event.target.getAttribute(\"name\");\r\n        const fieldValue = event.target.value;\r\n\r\n        const newFormData = { ...editFormData };\r\n        newFormData[fieldName] = fieldValue;\r\n\r\n        setEditFormData(newFormData);\r\n    };\r\n    \r\n    const handleAddFormSubmit = () => {\r\n        //event.preventDefault()\r\n        const newContact = {\r\n            id: nanoid(),\r\n            department_name: addFormData.department_name,\r\n            status: addFormData.status,\r\n\r\n        };\r\n        const newContacts = [...contacts, newContact];\r\n        setContacts(newContacts);\r\n       // handleDirect();\r\n    };\r\n\r\n    const handleEditFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const editedContact = {\r\n            id: editContactId,\r\n            department_name: editFormData.department_name,\r\n            status: editFormData.status,\r\n\r\n        };\r\n\r\n        const newContacts = [...contacts];\r\n        const index = contacts.findIndex((contact) => contact.id === editContactId);\r\n\r\n        newContacts[index] = editedContact;\r\n\r\n        setContacts(newContacts);\r\n        setEditContactId(null);\r\n    };\r\n\r\n    const handleEditClick = (event, contact) => {\r\n        event.preventDefault();\r\n        setEditContactId(contact.id);\r\n        const formValues = {\r\n            department_name: contact.department_name,\r\n            status: contact.status,\r\n\r\n        };\r\n\r\n        setEditFormData(formValues);\r\n    };\r\n\r\n   const handleCancelClick = () => {\r\n        setEditContactId(null);\r\n    };\r\n\r\n    const handleDeleteClick = (contactId) => {\r\n        const newContacts = [...contacts];\r\n        const index = contacts.findIndex((contact) => contact.id === contactId);\r\n        newContacts.splice(index, 1);\r\n        setContacts(newContacts);\r\n    };\r\n    const handleDirect = (event) => {\r\n        history.push('/All department');\r\n        \r\n      };\r\n    {/*const formsubmit =()=>{\r\n        if(handleAddFormSubmit){\r\n            return  (handleDirect());\r\n        }  \r\n    };*/}\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <form onSubmit={handleAddFormSubmit}>\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"block-header\">\r\n                            <h2>Add department</h2>\r\n                        </div>\r\n                        \r\n                          {/*{Object.keys(formErrors).length === 0 && IsSubmit ? (handleAddFormSubmit\r\n                                    ):(\r\n                                    <Link to=\"/register\"></Link>\r\n                                    )}*/}\r\n                          <div className=\"row clearfix\">\r\n                            <div className=\"col-lg-12 col-md-12 col-sm-12 \">\r\n                                <div className=\"card\">\r\n                                    <div className=\"header\">\r\n                                        <h2>add department </h2>\r\n                                    </div>\r\n                                    <div className=\"body\">\r\n                                        <div className=\"row clearfix\">\r\n                                            <div className=\"col-sm-6 \">\r\n                                                <div className=\"form-group1\">\r\n                                                    <lable>Department name</lable>\r\n                                                    <div className=\"form-line1\">\r\n                                                        <input\r\n                                                         type='text'\r\n                                                          name='department_name'\r\n                                                          required=\"required\"\r\n                                                          onChange={handleAddFormChange}\r\n                                                          className='form-control '\r\n                                                          placeholder='Enter a department_name'\r\n                                                          autoComplete='department name'\r\n                                                         />\r\n                                                    </div>\r\n                                                   {/* <p style={{color: \"red\"}}> {formErrors.departmentname}</p>*/}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row clearfix\">\r\n                                            <div className=\"col-sm-6\">\r\n                                                <div className=\"form-group1\">\r\n                                                    <lable>status</lable>   \r\n                                                    <div className=\"form-line1\">\r\n                                                        <input\r\n                                                         name=\"status\" \r\n                                                         required=\"required\"\r\n                                                         onChange={handleAddFormChange}\r\n                                                         placeholder= \"Enter status\"\r\n                                                         className=\"form-control no-resize\"\r\n                                                         />\r\n                                                    </div>\r\n                                                </div>\r\n                                               {/* <p style={{color: \"red\"}}>{formErrors.description }</p>*/}\r\n                                            </div>\r\n                                            <div className=\"row-sm-12  d-flex\">\r\n                                                {/*<div class=\" col-8 form-group1\">\r\n                                                    <div >\r\n                                                        <div>\r\n                                                            <label class=\"display-block\">Department Status</label>\r\n                                                        </div>\r\n                                                        <div class=\"form-check form-check-inline\">\r\n                                                            <input class=\"form-check-input\" type=\"radio\" name=\"status\"   id=\"product_active\" value=\"option1\"  />\r\n                                                            <label class=\"form-check-label\"  required for=\"product_active\">Active</label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"form-check form-check-inline\">\r\n                                                        <input class=\"form-check-input\" type=\"radio\" name=\"status\" id=\"product_inactive\" value=\"option2\" checked=\"\" />\r\n                                                        <label class=\"form-check-label\" for=\"product_inactive\">Inactive</label>\r\n                                                    </div>\r\n                                               </div>*/}\r\n\r\n                                                \r\n                                             </div>\r\n                                             <div className=\"col-sm-12  text align-center\">\r\n                                                <button  type=\"submit\" className=\"btn btn-raised g-bg-cyan\">Create Department</button>\r\n                                                </div>\r\n                                            \r\n                                        </div>\r\n                                        \r\n                                     </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                </section>\r\n            </form>\r\n\r\n        </div>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\nexport default Add_Department;"],"sourceRoot":""}